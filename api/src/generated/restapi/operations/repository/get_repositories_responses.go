// Code generated by go-swagger; DO NOT EDIT.

package repository

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/scaleshift/scaleshift/api/src/generated/models"
)

// GetRepositoriesOKCode is the HTTP code returned for type GetRepositoriesOK
const GetRepositoriesOKCode int = 200

/*GetRepositoriesOK OK

swagger:response getRepositoriesOK
*/
type GetRepositoriesOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Repository `json:"body,omitempty"`
}

// NewGetRepositoriesOK creates GetRepositoriesOK with default headers values
func NewGetRepositoriesOK() *GetRepositoriesOK {

	return &GetRepositoriesOK{}
}

// WithPayload adds the payload to the get repositories o k response
func (o *GetRepositoriesOK) WithPayload(payload []*models.Repository) *GetRepositoriesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get repositories o k response
func (o *GetRepositoriesOK) SetPayload(payload []*models.Repository) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRepositoriesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*models.Repository, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*GetRepositoriesDefault Unexpected error

swagger:response getRepositoriesDefault
*/
type GetRepositoriesDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetRepositoriesDefault creates GetRepositoriesDefault with default headers values
func NewGetRepositoriesDefault(code int) *GetRepositoriesDefault {
	if code <= 0 {
		code = 500
	}

	return &GetRepositoriesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get repositories default response
func (o *GetRepositoriesDefault) WithStatusCode(code int) *GetRepositoriesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get repositories default response
func (o *GetRepositoriesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get repositories default response
func (o *GetRepositoriesDefault) WithPayload(payload *models.Error) *GetRepositoriesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get repositories default response
func (o *GetRepositoriesDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRepositoriesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
